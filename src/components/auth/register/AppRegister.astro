---
const email = Astro.cookies.get("email")?.value ?? "";
const rememberMe = !!email;
---

<section class="register-container">
  <form id="register-form" class="register-form">
    <h2>Crear cuenta</h2>

    <label for="fullname">Nombre completo</label>
    <input type="text" id="fullname" name="name" required />

    <label for="email">Email</label>
    <input type="email" value={email} id="email" name="email" required />

    <label for="password">Contraseña</label>
    <input type="password" id="password" name="password" required />

    <label for="confirm-password">Confirmar contraseña</label>
    <input
      type="password"
      id="confirm-password"
      name="confirm-password"
      required
    />

    <button id="btn-submit" type="submit">Registrarse</button>

    <label class="remember">
      <input type="checkbox" checked={rememberMe} name="rememberMe" /> Recordarme
    </label>
    <div class="form-footer">
      <p>¿Ya tienes una cuenta? <a href="/login">Iniciar sesión</a></p>
    </div>
  </form>
</section>

<script>
  import { actions } from "astro:actions";
  import Swal from "sweetalert2";

  document.addEventListener("DOMContentLoaded", () => {
    const form = document.querySelector("#register-form") as HTMLFormElement;
    const passwordInput = document.querySelector("#password") as HTMLInputElement;
    const confirmPasswordInput = document.querySelector("#confirm-password") as HTMLInputElement;
    const btnSubmit = document.querySelector("#btn-submit") as HTMLButtonElement;

    form?.addEventListener("submit", async (e) => {
      e.preventDefault();
      btnSubmit.disabled = true;

      // Validación de password
      if (passwordInput.value !== confirmPasswordInput.value) {
        Swal.fire({
          icon: "error",
          title: "Las contraseñas no coinciden",
          text: "Por favor revisa ambas contraseñas",
        });
        btnSubmit.disabled = false;
        return;
      }

      const formData = new FormData(form);

      try {
        const result = await actions.register(formData);

        if (!result.data?.success) {
          Swal.fire({
            icon: "error",
            title: "Error en el registro",
            text: String(result.error) ?? "Error desconocido",
          });
          btnSubmit.disabled = false;
          return;
        }

        Swal.fire({
          icon: "success",
          title: "Registro exitoso",
        }).then(() => {
          window.location.replace("/admin");
        });
      } catch (err) {
        console.error("Error en el registro", err);
        Swal.fire({
          icon: "error",
          title: "Error en el servidor",
          text: "Intenta nuevamente más tarde",
        });
        btnSubmit.disabled = false;
      }
    });
  });
</script>

<style>
  .register-container {
    display: grid;
    place-items: center;
    min-height: 100vh;
    background-color: #f9f9f9;
    padding: 2rem;
  }

  .register-form {
    display: grid;
    gap: 1rem;
    background: white;
    padding: 2rem;
    border-radius: 8px;
    max-width: 400px;
    width: 100%;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
  }

  .register-form h2 {
    margin: 0;
    text-align: center;
    color: #333;
  }

  .register-form label {
    font-weight: bold;
    color: #555;
  }

  .register-form input {
    padding: 0.5rem;
    border: 1px solid #ccc;
    border-radius: 4px;
    font-size: 1rem;
  }

  .register-form button {
    padding: 0.75rem;
    background-color: #4caf50;
    color: white;
    font-weight: bold;
    border: none;
    border-radius: 4px;
    cursor: pointer;
  }

  .register-form button:hover {
    background-color: #43a047;
  }

  .form-footer {
    text-align: center;
    font-size: 0.9rem;
  }

  .form-footer a {
    color: #4caf50;
    text-decoration: none;
  }

  .form-footer a:hover {
    text-decoration: underline;
  }
</style>
